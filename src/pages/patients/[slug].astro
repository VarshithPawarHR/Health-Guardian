---
import { GoogleGenerativeAI } from "@google/generative-ai";
import { db } from "@lib/db";
import { chatsTable, userTable } from '@lib/db/schema';
import { eq } from "drizzle-orm";
import { getSession } from 'auth-astro/server';
import Layout from "@layouts/Layout.astro";

const {slug} = Astro.params;

const patientId = slug!;

const patients= await db.select({
  id:userTable.id,
  name:userTable.name
}).from(userTable)
.where(eq(userTable.id,patientId));

if(!patients.length){
  return Astro.redirect("/");
}

const patient = patients[0]

const chats =  await db
  .select({
    userId: chatsTable.userId,
    content: chatsTable.content,
    isBot: chatsTable.isBot,
  })
  .from(chatsTable)
  .where(eq(chatsTable.userId, patientId));

  
  const chatString = chats.reduce((p,chat)=> `${p} \n ${chat.isBot?"user":"model"} : ${chat.content}`,"")

  let summary;

  if(chatString){
    const genAI = new GoogleGenerativeAI(import.meta.env.GEMINI_KEY);
    const model = genAI.getGenerativeModel({
        model: "gemini-1.5-flash",
        generationConfig: {
          candidateCount: 1,
          //maxOutputTokens: 40,
          temperature: 1.0,
        },
        systemInstruction:
          "You are HealthGuide, a compassionate and knowledgeable healthcare advisor. Your mission is to provide specific, evidence-based advice for both physical and mental health inquiries. Responses should be concise, clear, and within six sentences, provided in a single paragraph without emojis or special characters. For example, if a user mentions having a fever, you might advise them to take a fever-reducing medication like paracetamol, apply a cool, wet cloth to their forehead, and stay hydrated. For mental health queries, suggest actionable strategies such as mindfulness or physical activity, while citing reputable sources. Always encourage professional consultation when necessary, and ask relevant follow-up questions to better understand the user's condition or concerns and give response within 3 sentence only.",
      })

    const prompt = chatString + "summarize the whole chat into atmost 2 pharagraphs" ;

    const result = await model.generateContent(prompt);

    summary = result.response.text()
  }

const session = await getSession(Astro.request);

if(!session?.user?.id){
  return Astro.redirect("/")
}

---
<Layout title="">
  <section class="profile-container text-white">
    <!-- Profile Header -->
    <h1>{patient.name}</h1>
    {
      summary?(
      <p>
      {summary}
      </p>
      ):(
        <p>
          No iteraction so far
        </p>
      )
    }
  </section>
</Layout>

<style>
  .profile-container {
    padding: 5rem;
    background-color: #0000; /* Transparent background */
    display: flex;
    flex-direction: column;
    align-items: center;
    font-size: larger;
  }

  .profile-header {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    max-width: 900px;
    padding: 20px;
    background-color: #0000;
    border-radius: 15px;
    color: white;
    gap: 20px;
  }

  .profile-pic {
    width: 120px;
    height: 120px;
    background-color: #ece5f0;
    border-radius: 50%;
    overflow: hidden;
    border: 4px solid #22a7f0;
    position: relative;
  }

  .profile-info {
    flex-grow: 1;
    padding: 0 20px;
  }

  .profile-info h1, .profile-info p {
    margin: 5px;
    color: white;
  }

  .profile-actions {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 10px;
  }

  .edit-btn {
    background-color: #22a7f0;
    padding: 10px 15px;
    border: none;
    color: white;
    border-radius: 5px;
    cursor: pointer;
  }

  .edit-btn:hover {
    background-color: #1b91d9;
  }

  /* Social Links */
  .social-links {
    display: flex;
    gap: 10px;
  }

  .social-icon {
    width: 30px;
    height: 30px;
    background-size: cover;
  }

  .linkedin { background-image: url('/icons/linkedin.png'); }
  .github { background-image: url('/icons/github.png'); }
  .twitter { background-image: url('/icons/twitter.png'); }

  /* Responsive Design for Mobile */
  @media (max-width: 768px) {
    .profile-header {
      flex-direction: column;
      align-items: center;
      padding: 15px;
      gap: 15px;
    }

    .profile-pic {
      width: 100px;
      height: 100px;
      border: 3px solid #22a7f0;
    }

    .profile-info {
      text-align: center;
      padding: 10px;
    }

    .profile-actions {
      align-items: center;
    }

    .edit-btn {
      width: 100%;
      text-align: center;
    }
  }

  .profile-content {
    display: flex;
   
    align-items: center;
    padding: 20px;
    gap: 2rem;
    width: 100%;
    max-width: 900px;
  }

  .blogs, .events, .certificates {
    display: block;
    text-transform: capitalize;
    position: relative;
    padding-bottom: 8px;
    overflow: hidden;
    margin-bottom: 20px;
    font-size: 1.2rem;
  }

  /* Underline Effect */
  .blogs::after, .events::after, .certificates::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 3px;
    background: linear-gradient(to right, #00f, rgb(46, 144, 235));
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.3s ease-out;
  }

  /* Hover Effect */
  .blogs:hover::after, .events:hover::after, .certificates:hover::after {
    transform: scaleX(1);
  }

  .blogs:hover, .events:hover, .certificates:hover {
    transform: scale(1.1);
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.87);
  }
</style>
